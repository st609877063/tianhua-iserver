package com.gift.dao.impl;import java.util.List;import org.mybatis.spring.support.SqlSessionDaoSupport;import org.springframework.stereotype.Repository;import com.gift.bean.Gift_fujian;import com.gift.dao.Gift_fujianDAO;/** * @Repository @Service @Controller，它们分别对应存储层Bean，业务层Bean，和展示层Bean。 * @Component泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。 * @scope="prototype"来保证每一个请求有一个单独的Action来处理， 避免struts中Action的线程安全问题。 */@Repositorypublic class Gift_fujianDAOImpl extends SqlSessionDaoSupport implements		Gift_fujianDAO {	public List<Gift_fujian> findAllGift_fujian() {		try {			return this.getSqlSession().selectList("findAllGift_fujian");		} catch (RuntimeException re) {			logger.error("findAllGift_fujian failed :{}", re);			throw re;		}	}	public List<Gift_fujian> findGift_fujianListByGiftItemNo(String item_no) {		try {			return this.getSqlSession().selectList("findGift_fujianListByGiftItemNo", item_no);		} catch (RuntimeException re) {			logger.error("findGift_fujianListByGiftItemNo failed :{}", re);			throw re;		}	}		public Gift_fujian findGift_fujianByID(Integer fj_id) {		try {			return this.getSqlSession().selectOne("findGift_fujianByID", fj_id);		} catch (RuntimeException re) {			logger.error("findGift_fujianByID failed :{}", re);			throw re;		}	}	public int removeGift_fujianByItemNo(Gift_fujian giftFujian) {		try {			return this.getSqlSession().delete("removeGift_fujianByItemNo", giftFujian);		} catch (RuntimeException re) {			logger.error("removeGift_fujian failed :{}", re);			throw re;		}	}	public int removeGift_fujianById(int fj_id) {		try {			return this.getSqlSession().delete("removeGift_fujianById", fj_id);		} catch (RuntimeException re) {			logger.error("removeGift_fujianById failed :{}", re);			throw re;		}	}		public void saveGift_fujian(Gift_fujian giftFujian) {		try {			getSqlSession().insert("saveGift_fujian", giftFujian);		} catch (RuntimeException re) {			logger.error("saveGift_fujian failed :{}", re);			throw re;		}	}	public void updateGift_fujian(Gift_fujian giftFujian) {		try {			this.getSqlSession().update("updateGift_fujian", giftFujian);		} catch (RuntimeException re) {			logger.error("updateGift_fujian failed :{}", re);			throw re;		}	}}