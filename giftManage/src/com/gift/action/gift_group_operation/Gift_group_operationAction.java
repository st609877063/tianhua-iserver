package com.gift.action.gift_group_operation;import java.io.ByteArrayOutputStream;import java.io.InputStream;import java.io.PrintStream;import java.util.Map;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import org.apache.log4j.Logger;import org.apache.struts2.ServletActionContext;import org.springframework.stereotype.Controller;import com.gift.action.BaseAction;import com.gift.bean.Gift_group_operation;import com.gift.service.Gift_group_operationService;import com.opensymphony.xwork2.ActionContext;@Controller@SuppressWarnings({ "unchecked", "rawtypes" })public class Gift_group_operationAction extends BaseAction {	private static final long serialVersionUID = 1L;	private Gift_group_operationService service;	private Gift_group_operation gift_group_operation;	private Integer group_id_c;	// 调用分页默认值	int currentPage = 1; // 定义没页要显示的记录数	int lineSize = 10; // 总记录数 / 每页显示的记录数	int allRecorders;	public Gift_group_operationService getService() {		return service;	}	@Resource(name = "gift_group_operationServiceImpl")	public void setService(Gift_group_operationService service) {		this.service = service;	}	public Gift_group_operation getGift_group_operation() {		return gift_group_operation;	}	public void setGift_group_operation(			Gift_group_operation gift_group_operation) {		this.gift_group_operation = gift_group_operation;	}	public int getCurrentPage() {		return currentPage;	}	public void setCurrentPage(int currentPage) {		this.currentPage = currentPage;	}	public Integer getGroup_id_c() {		return group_id_c;	}	public void setGroup_id_c(Integer group_id_c) {		HttpServletRequest request = ServletActionContext.getRequest();		if (request.getMethod().equals("POST")) {			this.group_id_c = group_id_c;		} else {			this.group_id_c = group_id_c;		}	}	public String list() throws Exception {		Map request = (Map) ActionContext.getContext().get("request");		request.put("list", service.findAll());		return "listsuccess";	}	public String saveP() throws Exception {		return "saveP";	}	public String save() throws Exception {		try {			this.service.save(this.gift_group_operation);			return "savesuccess";		} catch (Exception e) {			ByteArrayOutputStream msg = new ByteArrayOutputStream();			e.printStackTrace(new PrintStream(msg));			addActionError("保存出错,堆栈信息如下:</BR>" + msg.toString());			Logger logger = Logger.getLogger(this.getClass());			logger.error("programe error !gift_group_operationsaveAction.java "); // 写到日志文件																					// C:\\log4j_error.log																					// 中			return "saveerror";		}	}	public String updateP() throws Exception {		gift_group_operation = this.service.findByGo_id(gift_group_operation				.getGo_id());		return "updateP";	}	public String update() throws Exception {		try {			this.service.update(this.gift_group_operation);			return "updatesuccess";		} catch (Exception e) {			ByteArrayOutputStream msg = new ByteArrayOutputStream();			e.printStackTrace(new PrintStream(msg));			addActionError("保存出错,堆栈信息如下:</BR>" + msg.toString());			Logger logger = Logger.getLogger(this.getClass());			logger.error("programe error !gift_group_operationupdateAction.java "); // 写到日志文件																					// C:\\log4j_error.log																					// 中			return "updateerror";		}	}	public String remove() throws Exception {		this.service.delete(gift_group_operation);		return "removesuccess";	}	public String listByGroup_id() throws Exception {		Map request = (Map) ActionContext.getContext().get("request");		if (this.getGroup_id_c().equals("")) {			request.put("list", service.findAll());		} else {			allRecorders = service					.findGift_group_operationByGroup_id_count(this							.getGroup_id_c());			request.put("currentPage", new Integer(currentPage)); // 当前页			request.put("allRecorders", new Integer(allRecorders));// 总记录总数			request.put("list", service.findGift_group_operationByGroup_id(					this.getGroup_id_c(), this.getCurrentPage(), lineSize));		}		return "listByGroup_id";	}	public InputStream getDownloadFile() {		return this.service.getInputStream(this.getGroup_id_c());	}	public String generateExcel() throws Exception {		return "generateExcel";	}}