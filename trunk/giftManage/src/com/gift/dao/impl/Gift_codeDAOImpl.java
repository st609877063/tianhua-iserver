package com.gift.dao.impl;import java.util.HashMap;import java.util.List;import java.util.Map;import org.mybatis.spring.support.SqlSessionDaoSupport;import org.springframework.stereotype.Repository;import com.gift.bean.Gift_code;import com.gift.dao.Gift_codeDAO;/** * @Repository @Service @Controller，它们分别对应存储层Bean，业务层Bean，和展示层Bean。 * @Component泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。 * @scope="prototype"来保证每一个请求有一个单独的Action来处理， 避免struts中Action的线程安全问题。 */@Repository@SuppressWarnings({ "unchecked", "rawtypes" })public class Gift_codeDAOImpl extends SqlSessionDaoSupport implements		Gift_codeDAO {	public List<Gift_code> findAllGift_code() {		try {			return this.getSqlSession().selectList("findAllGift_code");		} catch (RuntimeException re) {			logger.error("findAllGift_code failed :{}", re);			throw re;		}	}	public Gift_code findGift_codeByPk_id(Integer pk_id) {		try {			return this.getSqlSession()					.selectOne("findGift_codeByPk_id", pk_id);		} catch (RuntimeException re) {			logger.error("findGift_codeByPk_id failed :{}", re);			throw re;		}	}	public void removeGift_code(Gift_code gift_code) {		try {			this.getSqlSession().delete("removeGift_code", gift_code);		} catch (RuntimeException re) {			logger.error("removeGift_code failed :{}", re);			throw re;		}	}	public void saveGift_code(Gift_code gift_code) {		try {			getSqlSession().insert("saveGift_code", gift_code);		} catch (RuntimeException re) {			logger.error("saveGift_code failed :{}", re);			throw re;		}	}	public void updateGift_code(Gift_code gift_code) {		try {			this.getSqlSession().update("updateGift_code", gift_code);		} catch (RuntimeException re) {			logger.error("updateGift_code failed :{}", re);			throw re;		}	}	public int findGift_codeByName_count(String name_c) {		Map Gift_codemap_count = new HashMap();		Gift_codemap_count.put("name_c", name_c);		try {			return (Integer) this.getSqlSession().selectOne(					"findGift_codeByName_count", Gift_codemap_count);		} catch (RuntimeException re) {			logger.error("findGift_codeByName_count failed :{}", re);			throw re;		}	}	public List<Gift_code> findGift_codeByName(String name_c, int currentPage,			int lineSize) {		Map Gift_codemap = new HashMap();		Gift_codemap.put("name_c", name_c);		Gift_codemap.put("sartRow", ((currentPage - 1) * lineSize));		Gift_codemap.put("endRow", currentPage * lineSize);		try {			return this.getSqlSession().selectList("findGift_codeByName",					Gift_codemap);		} catch (RuntimeException re) {			logger.error("findGift_codeByName failed :{}", re);			throw re;		}	}	public List<Gift_code> findGift_codeByName_excel(String name_c) {		Map Gift_codemap_excel = new HashMap();		Gift_codemap_excel.put("name_c", name_c);		try {			return this.getSqlSession().selectList("findGift_codeByName_excel",					Gift_codemap_excel);		} catch (RuntimeException re) {			logger.error("findGift_codeByName_excel failed :{}", re);			throw re;		}	}}