package com.gift.action.gift_group_user;import java.util.List;import javax.annotation.Resource;import org.apache.log4j.Logger;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import com.gift.action.BaseAction;import com.gift.bean.Gift_group_user;import com.gift.bean.Gift_user;import com.gift.service.Gift_group_userService;import com.gift.tools.DateTools;import com.gift.tools.UserValidator;@Controller@Scope("prototype")public class Gift_group_userAction extends BaseAction {	private static final long serialVersionUID = 1L;		@Resource(name = "gift_group_userServiceImpl")	private Gift_group_userService service;		//实体对象和结果集	private Gift_group_user gift_group_user;	private List<Gift_group_user> gift_group_user_list;		private String keyword = "";	private String pagehtml;	private String update_gu_id;	private String list_user_id;	// ----------分页 start----------	private int pageNow = 1; // 页码数	private int pageSize = 5; // 页面行数	private int rowCount = 0;// 总行数	private int pageCount = 1; // 总页数	// ----------分页 end----------	/**	 * 分页查询	 * @return	 * @throws Exception	 */	public String list() throws Exception {		try{		/*	// 关键字查询		rowCount = service.findByKeyword_count(keyword);// 计算出实际记录数		pageCount = rowCount / pageSize;// 计算出实际页数		if ((rowCount % pageSize != 0) || (pageCount == 0))			pageCount++;		gift_group_user_list = service.findByKeyword(keyword, (pageNow - 1)				* pageSize, pageSize);*/			int user_id = Integer.parseInt(list_user_id);			Gift_user user = new Gift_user();			user.setUser_id(user_id);			gift_group_user_list = service.findByUser(user);				return "listsuccess";		} catch (Exception e) {			return "list";		}	}	/**	 * 跳转到添加页面	 * @return	 * @throws Exception	 */	public String saveP() throws Exception {		return "saveP";	}	/**	 * 添加(保存)	 * @return	 * @throws Exception	 */	public String save() throws Exception {		try {			gift_group_user.setAdd_time(DateTools.getTimestamp());			gift_group_user.setAdd_user_id(Integer.parseInt(UserValidator.getCookie(getRequest())[0]));			service.save(gift_group_user);			return "savesuccess";		} catch (Exception e) {			//e.printStackTrace(new PrintStream(msg));			Logger logger = Logger.getLogger(this.getClass());			logger.error("programe error !gift_group_usersaveAction.java "); // 写到日志文件																				// C:\\log4j_error.log																				// 中			return "saveerror";		}	}		/**	 * 跳转到更新页面	 * @return	 * @throws Exception	 */	public String updateP() throws Exception {		try {			int gu_id = Integer.parseInt(update_gu_id);			gift_group_user = service.findById(gu_id);			return "updateP";		} catch (Exception e) {			return "list";		}	}		/**	 * 更新	 * @return	 * @throws Exception	 */	public String update() throws Exception {		try {			service.update(gift_group_user);			return "updatesuccess";		} catch (Exception e) {			//e.printStackTrace(new PrintStream(msg));			Logger logger = Logger.getLogger(this.getClass());			logger.error("programe error !gift_group_userupdateAction.java "); // 写到日志文件																				// C:\\log4j_error.log																				// 中			return "updateerror";		}	}	public String remove() throws Exception {		service.delete(gift_group_user);		return "removesuccess";	}	public String listByGroup_id() throws Exception {	/*	Map request = (Map) ActionContext.getContext().get("request");		if (this.getGroup_id_c().equals("")) {			request.put("list", service.findAll());		} else {			allRecorders = service.findGift_group_userByGroup_id_count(this					.getGroup_id_c());			request.put("currentPage", new Integer(currentPage)); // 当前页			request.put("allRecorders", new Integer(allRecorders));// 总记录总数			request.put("list", service.findGift_group_userByGroup_id(					this.getGroup_id_c(), this.getCurrentPage(), lineSize));		}*/		return "listByGroup_id";	}	public String generateExcel() throws Exception {		return "generateExcel";	}	public void setGift_group_user_list(List<Gift_group_user> gift_group_user_list) {		this.gift_group_user_list = gift_group_user_list;	}	public List<Gift_group_user> getGift_group_user_list() {		return gift_group_user_list;	}			public void setService(Gift_group_userService service) {		this.service = service;	}	public Gift_group_user getGift_group_user() {		return gift_group_user;	}	public void setGift_group_user(Gift_group_user gift_group_user) {		this.gift_group_user = gift_group_user;	}	public Gift_group_userService getService() {		return service;	}	public String getKeyword() {		return keyword;	}	public void setKeyword(String keyword) {		this.keyword = keyword;	}	public String getPagehtml() {		return pagehtml;	}	public void setPagehtml(String pagehtml) {		this.pagehtml = pagehtml;	}	public String getUpdate_gu_id() {		return update_gu_id;	}	public void setUpdate_gu_id(String update_gu_id) {		this.update_gu_id = update_gu_id;	}	public int getPageNow() {		return pageNow;	}	public void setPageNow(int pageNow) {		this.pageNow = pageNow;	}	public int getPageSize() {		return pageSize;	}	public void setPageSize(int pageSize) {		this.pageSize = pageSize;	}	public int getRowCount() {		return rowCount;	}	public void setRowCount(int rowCount) {		this.rowCount = rowCount;	}	public int getPageCount() {		return pageCount;	}	public void setPageCount(int pageCount) {		this.pageCount = pageCount;	}	public void setList_user_id(String list_user_id) {		this.list_user_id = list_user_id;	}	public String getList_user_id() {		return list_user_id;	}}